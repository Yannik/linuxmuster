#!/bin/bash
# doppelanmeldungen | jesko.anschuetz@linuxmuster.net 22.10.2014
# Skript ermittelt auf einem Linuxmuster.net 6.x Server, welche Nutzer
# doppelt angemeldet sind und startet nach einer Warnung die betroffenen
# Rechner neu.
#############################

# reboot=1 --> Rechner werden eine Minute nach der Warnung herunter-gefahren
# falls dann immer noch mehrfache Anmeldungen vorliegen.
# reboot=0 --> Es wird nur eine Meldung erzeugt und eine Mail an den Administrator
reboot=1

target_email="root"

# der Pfad ist wichtig, damit das Skript auch als CRON-Job funktioniert
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11:/opt/morz/bin"

# these space-separated users are allowed to login multiple times
allowed_users='user1 user2'

# Meldung, die der Nutzer nach dem Neustart erhält: "LOGIN," wird automatisch davor gesetzt. \n erzeugt einen Zeilenumbruch
NACHNEUSTARTMSG="du hast die letzte Warnung nicht ernst genommen und warst weiterhin an mehreren Rechnern gleichzeitig angemeldet. \n Alle Rechner, an denen du angemeldet warst, wurden neu gestartet.\n\n Denke daran: \n - Du darfst dein Passwort nicht weitergeben, \n - Du darfst nicht mit fremden Accounts arbeiten und \n - Du darfst auch nicht andere mit deinem Account arbeiten lassen..."

# debug=1 bewirkt, dass die Herunterfahr-Befehle nicht ausgeführt, sondern auf der Console ausgegeben werden.
debug=0

# wohin darf das Skript schreiben?
TMP="/tmp/doppelanmeldungen"

containsElement () {
  for e in $2; do [ "$e" = "$1" ] && return 0; done
  return 1
}

# falls es nicht existiert wird das temp-Verzeichnis angelegt
mkdir -p $TMP

if [[ "$(ls $TMP)" != "" ]]
then	#wenn TempDir nicht leer ist, bereinigen...
	find ${TMP} -cmin 5 -delete  # nach 5 Minuten wird der Verwarnungsstatus zurückgesetzt...
fi

# herausfinden, wer doppelt angemeldet ist.
duplicates=$(smbstatus -b | tail -n+5 | sed 's/  */;/g' | cut -d";" -f2 | sort | uniq -d)
for login in $duplicates; do
  containsElement "$login" "$allowed_users" && continue
  # find all hosts user is logged in on
  hosts=$(smbstatus -b -u $login | tail -n +5 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sed -e "s/\n/ /g" | uniq -u )
  hostcount=$(echo $RECHNER | wc -l)
  [[ "$hostcount" == 0 ]] && continue #may be < 2 due to uniq -u filtering out multiple entries for the same host
  # bei allen anderen werden noch Name und Klasse ermittelt.
  primarygroup=$(/usr/sbin/sophomorix-user -u $login| grep PrimaryGroup | cut -d ":" -f2 | awk -F "  " ' { print $1 }' | sed 's/^ //g')
  fullname=$(/usr/sbin/sophomorix-user -u $login| grep Gecos | cut -d ":" -f2 | awk -F "  " ' { print $1 }' | sed 's/^ //g')
  if [[ "$reboot" == "1" ]]
  then
   if [ -e ${TMP}/$login ] # wenn beim letzten Lauf schon verwarnt wurde, rechner herunterfahren...
   then
	[[ "$debug" == "0" ]] &&  /opt/morz/bin/message-user $login "$login, $NACHNEUSTARTMSG"
	sleep 1 # kurz warten
	for host in $hosts
          do
                [[ "$debug" == "0" ]] && ssh root@$host reboot
                [[ "$debug" == "1" ]] && echo "ssh root@$host reboot"
          done

   else # sonst warnen...
    /opt/morz/bin/message-user $login "$fullname, du bist an $hostcount Rechnern gleichzeitig angemeldet.\n\nDas ist verboten. \n\nMelde dich sofort überall ab, wo du nicht persönlich dran sitzt.\n\nRechner an denen du angemeldet bist: $(echo $RECHNER | sed 's/ /, /g') \n\n\n Tust du das nicht sofort, werden alle diese Rechner in 1 Minute heruntergefahren..."
    echo -e "$fullname aus der Gruppe $primarygroup ist an $hostcount Rechnern angemeldet:\n\n$(echo $hosts| sed 's/ /, /g')" | mail -s "Mehrfachanmeldung von $fullname, $primarygroup" "$targetemail"
    sleep 1
    touch ${TMP}/$login
    sleep 1
    echo "Warnung ignoriert $date" >  ${TMP}/$login
   fi
  fi
done

exit 0
